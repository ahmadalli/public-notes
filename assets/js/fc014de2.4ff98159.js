"use strict";(self.webpackChunkpublic_notes=self.webpackChunkpublic_notes||[]).push([[9838],{4038:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"tech/oh-shit-x/dotnet","title":".NET","description":".NET isn\'t an Open Platform","source":"@site/docs/0100-tech/060-oh-shit-x/40-dotnet.md","sourceDirName":"0100-tech/060-oh-shit-x","slug":"/tech/oh-shit-x/dotnet","permalink":"/tech/oh-shit-x/dotnet","draft":false,"unlisted":false,"editUrl":"https://github.com/ahmadalli/public-notes/edit/main/docs/0100-tech/060-oh-shit-x/40-dotnet.md","tags":[],"version":"current","lastUpdatedBy":"ahmadali shafiee","lastUpdatedAt":1740212287000,"sidebarPosition":40,"frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Oh Shit, Git!","permalink":"/tech/oh-shit-x/git"},"next":{"title":"Spreadsheets","permalink":"/tech/oh-shit-x/spreadsheets/"}}');var o=n(4848),i=n(8453);const r={},c=".NET",d={},a=[{value:".NET isn&#39;t an Open Platform",id:"net-isnt-an-open-platform",level:2},{value:"Debugging Outside of Microsoft Ecosystem",id:"debugging-outside-of-microsoft-ecosystem",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"net",children:".NET"})}),"\n",(0,o.jsx)(t.h2,{id:"net-isnt-an-open-platform",children:".NET isn't an Open Platform"}),"\n",(0,o.jsxs)(t.p,{children:["See ",(0,o.jsx)(t.a,{href:"https://isdotnetopen.com/",children:"isdotnetopen.com"}),"."]}),"\n",(0,o.jsx)(t.h3,{id:"debugging-outside-of-microsoft-ecosystem",children:"Debugging Outside of Microsoft Ecosystem"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Install ",(0,o.jsx)(t.a,{href:"https://github.com/Samsung/netcoredbg",children:"Samsung / netcoredbg"})]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["For VSCode based IDEs, add the following to your debug config inside ",(0,o.jsx)(t.code,{children:"launch.json"}),":"]}),"\n",(0,o.jsx)(t.p,{children:"This works for Windows:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'"pipeTransport": {\n   "pipeProgram": "cmd",\n   "pipeArgs": ["/c"],\n   "debuggerPath": "<path-to-netcoredbg>"\n}\n'})}),"\n"]}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(6540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);